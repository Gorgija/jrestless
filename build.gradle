def checkstyleCfg = "${projectDir}/alien/checkstyle/checkstyle.xml" as File


buildscript {
	repositories {
		jcenter()
	}
	dependencies {
		classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7'
	}
}

allprojects {

	apply plugin: 'java'

	sourceCompatibility = 1.8
	targetCompatibility = 1.8
}

subprojects {

	apply plugin: 'eclipse'
	apply plugin: 'maven'
	apply plugin: 'checkstyle'
	apply plugin: 'findbugs'
	apply plugin: 'pmd'
	apply plugin: 'jacoco'
	apply plugin: 'com.jfrog.bintray'
	apply plugin: 'maven-publish'

	repositories {
		mavenCentral()
	}

	checkstyle {
		configFile = checkstyleCfg
		toolVersion = '6.19'
		ignoreFailures = false
		sourceSets = [project.sourceSets.main]
	}
	build.dependsOn checkstyleMain

	findbugs {
		toolVersion = '3.0.1'
		sourceSets = [project.sourceSets.main]
		effort = 'max'
	}
	tasks.withType(FindBugs) {
		reports {
			xml.enabled = false
			html.enabled = true
		}
	}

	pmd {
		toolVersion = '5.4.2'
		sourceSets = [project.sourceSets.main]
	}

	jacocoTestReport {
		reports {
			xml.enabled = true
			html.enabled = true
		}
	}
	check.dependsOn jacocoTestReport
	
	bintray {
		user = hasProperty('bintray_user') ? property('bintray_user') : 'unset'
		key = hasProperty('bintray_user') ? property('bintray_key') : 'unset'
		pkg {
			repo = 'maven'
			name = 'jrestless'
			licenses = ['Apache-2.0']
			vcsUrl = 'https://github.com/bbilger/jrestless.git'
		}
		publications = ['BintrayPublication']
	}
	
	publishing {
		publications {
			BintrayPublication(MavenPublication) {
				from components.java
				groupId "$group"
				artifactId "$project.name"
				version "$version"
			}
		}
	}
}

dependencies {
	compile project(":core:jrestless-core-container")
	compile project(":aws:jrestless-aws-swagger")
	compile project(":aws:jrestless-aws-core")
	compile project(":aws:jrestless-aws-handler")
	compile project(":test:jrestless-test")
	compile project(":aws:example:jrestless-aws-example-simple")
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.14'
}
